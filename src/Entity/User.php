<?php

namespace App\Entity;

use App\Repository\UserRepository;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface;
use Symfony\Component\Security\Core\User\UserInterface;

#[ORM\Entity(repositoryClass: UserRepository::class)]
#[ORM\UniqueConstraint(name: 'UNIQ_IDENTIFIER_EMAIL', fields: ['email'])]
#[UniqueEntity(fields: ['email'], message: 'There is already an account with this email')]
#[UniqueEntity(fields: ['username'], message: 'This username is already taken')]
class User implements UserInterface, PasswordAuthenticatedUserInterface
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column]
    private ?int $id = null;
    
    #[ORM\Column(length: 180)]
    private ?string $email = null;
    
    #[ORM\Column(length: 255, unique: true)]
    private ?string $username = null;
    
    #[ORM\Column]
    private array $roles = [];
    
    #[ORM\Column]
    private ?string $password = null;
    
    #[ORM\Column(length: 255, nullable: true)]
    private ?string $profilePic = null;
    
    #[ORM\Column(length: 255)]
    private ?string $firstName = null;
    
    #[ORM\Column(length: 255)]
    private ?string $lastName = null;
    
    #[ORM\Column(type: 'json')]
    private array $enrolledCourses = [];
    
    #[ORM\Column(type: 'boolean')]
    private bool $passwordAutoGenerated = true;
    
    #[ORM\Column(length: 20, nullable: true)]
    private ?string $phoneNumber = null;
    
    #[ORM\Column(length: 255, nullable: true)]
    private ?string $address = null;
    
    public function getId(): ?int
    {
        return $this->id;
    }
    
    public function getEmail(): ?string
    {
        return $this->email;
    }
    
    public function setEmail(string $email): self
    {
        $this->email = $email;
        return $this;
    }
    
    /**
     * Returns the unique identifier for authentication.
     * Here we still use the email as the identifier.
     * If you prefer to use the username, change the return value.
     */
    public function getUserIdentifier(): string
    {
        return (string) $this->email;
    }
    
    public function getUsername(): ?string
    {
        return $this->username;
    }
    
    public function setUsername(string $username): self
    {
        $this->username = $username;
        return $this;
    }
    
    public function getRoles(): array
    {
        $roles = $this->roles;
        // Ensure every user has at least ROLE_USER.
        $roles[] = 'ROLE_USER';
        return array_unique($roles);
    }
    
    public function setRoles(array $roles): self
    {
        $this->roles = $roles;
        return $this;
    }
    
    public function getPassword(): ?string
    {
        return $this->password;
    }
    
    public function setPassword(string $password): self
    {
        $this->password = $password;
        return $this;
    }
    
    public function getProfilePic(): ?string
    {
        return $this->profilePic;
    }
    
    public function setProfilePic(?string $profilePic): self
    {
        $this->profilePic = $profilePic;
        return $this;
    }
    
    public function getFirstName(): ?string
    {
        return $this->firstName;
    }
    
    public function setFirstName(string $firstName): self
    {
        $this->firstName = $firstName;
        return $this;
    }
    
    public function getLastName(): ?string
    {
        return $this->lastName;
    }
    
    public function setLastName(string $lastName): self
    {
        $this->lastName = $lastName;
        return $this;
    }
    
    public function getEnrolledCourses(): array
    {
        return $this->enrolledCourses;
    }
    
    public function setEnrolledCourses(array $enrolledCourses): self
    {
        $this->enrolledCourses = $enrolledCourses;
        return $this;
    }
    
    public function isPasswordAutoGenerated(): bool
    {
        return $this->passwordAutoGenerated;
    }
    
    public function setPasswordAutoGenerated(bool $passwordAutoGenerated): self
    {
        $this->passwordAutoGenerated = $passwordAutoGenerated;
        return $this;
    }
    
    public function getPhoneNumber(): ?string
    {
        return $this->phoneNumber;
    }
    
    public function setPhoneNumber(?string $phoneNumber): self
    {
        $this->phoneNumber = $phoneNumber;
        return $this;
    }
    
    public function getAddress(): ?string
    {
        return $this->address;
    }
    
    public function setAddress(?string $address): self
    {
        $this->address = $address;
        return $this;
    }
    
    public function eraseCredentials(): void
    {
        // Clear any temporary sensitive data if stored.
    }
}
